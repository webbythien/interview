
map $arg_sid $p_id {
    ~*^(\d\d).+ $1;
}

map $http_connection $p_http_connection {
    default $http_connection;
    close '';
}

upstream rcon_unix {
    keepalive ${ keepalive };

    <%
    var servers = [];

    for (var i = 0; i < cores; i++) {
        var unixPath = path + '/app/unix/' + (i < 10? '0'+i: i);
        servers.push('server unix:'+ unixPath + ';');
    }

    print(servers.join('\n    '));
    %>
}

server {
    listen ${ port }${ ssl? ' ssl http2': '' };
    server_name ${ serverName };
<% if (ssl) { %>
    ssl_certificate '${ sslCert }';
    ssl_certificate_key '${ sslKey }';
<% } %>


    proxy_read_timeout ${ timeout }s;

    location / {
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $p_http_connection;

        if ($p_id != '') {
            proxy_pass http://unix:${ path }/app/unix/$p_id;
        }

        if ($p_id = '') {
            proxy_pass http://rcon_unix;
        }
    }
}


